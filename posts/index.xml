<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Mingjie Li</title>
    <link>https://limingjie.github.io/posts/</link>
    <description>Recent content in Posts on Mingjie Li</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 May 2019 23:50:59 +0800</lastBuildDate>
    
	<atom:link href="https://limingjie.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Typeset Pinyin in TeX</title>
      <link>https://limingjie.github.io/posts/2019-05-29-katex-pinyin/</link>
      <pubDate>Wed, 29 May 2019 23:50:59 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2019-05-29-katex-pinyin/</guid>
      <description>$$ \def\py#1#2{\text{\scriptsize{#2}} \atop \text{#1}} {\py{关}{gu\=an}} {\py{雎}{j\=u}} \\~\\ {\py{关}{gu\=an}} {\py{关}{gu\=an}} {\py{雎}{j\=u}} {\py{鸠}{ji\=u}} {\py{，}{}} {\py{在}{z\`ai}} {\py{河}{h\&#39;e}} {\py{之}{zh\=\i}} {\py{洲}{zh\=ou}} {\py{。}{}} \\~\\ {\py{窈}{y\v{a}o}} {\py{窕}{ti\v{a}o}} {\py{淑}{sh\=u}} {\py{女}{n\v{\&#34;u}}} {\py{，}{}} {\py{君}{j\=un}} {\py{子}{z\v\i}} {\py{好}{h\v{a}o}} {\py{逑}{qi\&#39;u}} {\py{。}{}} $$  1 2 3 4 5 6 7 8 9 10  \def\py#1#2{\text{\scriptsize{#2}} \atop \text{#1}} {\py{关}{gu\=an}} {\py{雎}{j\=u}} \\~\\ {\py{关}{gu\=an}} {\py{关}{gu\=an}} {\py{雎}{j\=u}} {\py{鸠}{ji\=u}} {\py{，}{}} {\py{在}{z\`ai}} {\py{河}{h\&amp;#39;e}} {\py{之}{zh\=\i}} {\py{洲}{zh\=ou}} {\py{。}{}} \\~\\ {\py{窈}{y\v{a}o}} {\py{窕}{ti\v{a}o}} {\py{淑}{sh\=u}} {\py{女}{n\v{\&amp;#34;u}}} {\py{，}{}} {\py{君}{j\=un}} {\py{子}{z\v\i}} {\py{好}{h\v{a}o}} {\py{逑}{qi\&amp;#39;u}} {\py{。}{}}   Note: Wrap the code in &amp;lt;div&amp;gt;$$ and $$&amp;lt;/div&amp;gt;.</description>
    </item>
    
    <item>
      <title>Render TeX in Hugo Blog</title>
      <link>https://limingjie.github.io/posts/2019-05-28-render-tex-in-hugo/</link>
      <pubDate>Wed, 29 May 2019 00:30:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2019-05-28-render-tex-in-hugo/</guid>
      <description>Recently, I started to think about learning $\TeX$, adding $\TeX$ support to blog looks like a good start for me. It took me quite some time to figure out all the culprits of embedding $\TeX$ in markdown. I hope this blog could save you some time before starting writing in $\TeX$.
Required Components  The default Blackfriday markdown engine. $\KaTeX$ math typesetting library for the web.  Steps to Setup $\KaTeX$ in Hugo $\KaTeX$ is an excellent fast engineer for rendering $\TeX$ on web.</description>
    </item>
    
    <item>
      <title>Algorithm: Array Summary Threshold</title>
      <link>https://limingjie.github.io/posts/2019-05-27-algorithm-summary-threshold/</link>
      <pubDate>Sun, 26 May 2019 22:00:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2019-05-27-algorithm-summary-threshold/</guid>
      <description>Question Given an array of integers $A (a_i \geq 0, i \in [0, n])$ and a threshold $T$.
If $\sum_{i = 0}^n a_i &amp;gt; T$, find an integer $t$, for $a_i &amp;gt; t (i \in [0, n]) \to a_i = t$.
Find the largest $t$ which makes $\sum_{i = 0}^n a_i \leq T$.
For Example, $A = [30, 20, 10, 50, 40],\,\,T = 127$. Expecting $t = 33$.
Answer ArraySummaryThreshold.</description>
    </item>
    
    <item>
      <title>Golang Closure Exercise</title>
      <link>https://limingjie.github.io/posts/2019-05-25-golang-closure-exercise/</link>
      <pubDate>Sat, 25 May 2019 15:00:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2019-05-25-golang-closure-exercise/</guid>
      <description>I always had a question, if Golang does not have the static variable, how could it gracefully handle long lifetime variables except using global variables?
Until last night, I saw this Exercise: Fibonacci closure in A tour of Go. I have to admit I am not a fan of closure, sometimes it makes easy logic complex. But it is still great for learning.
 Exercise: Fibonacci closure
Let&amp;rsquo;s have some fun with functions.</description>
    </item>
    
    <item>
      <title>My Mechanical Keyboards</title>
      <link>https://limingjie.github.io/posts/2019-05-01-my-mechanical-keyboards/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2019-05-01-my-mechanical-keyboards/</guid>
      <description>My very first impression of a mechanical keyboard is a clunky ISO layout IBM keyboard on which I learned touch typing, I can still remember it was full of noise like rusty sprints. Then suddenly, the whole world is dominated by membrane keyboards for its low cost and quiet experience.
As a fan of keyboards and mice. I owned Logitech mice M505, M525, and M545, guess what? I only paid the first one, they kept broken within the warranty and got replaced.</description>
    </item>
    
    <item>
      <title>M5Stack Traffic Light</title>
      <link>https://limingjie.github.io/posts/2019-04-10-m5stack-traffic-light/</link>
      <pubDate>Wed, 10 Apr 2019 22:10:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2019-04-10-m5stack-traffic-light/</guid>
      <description> A traffic light toy build on M5Stack. Find the source code on GitHub.
Customize The Traffic Light Find the traffic light sequence definition in TrafficLight.ino. Customize the sequence in lights array.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  // Traffic light struct typedef struct { int color_index; // 1 - Red, 2 - Yellow, 3 - Green  bool blink; unsigned long interval; // milliseconds } Traffic_Light; // Traffic light sequences Traffic_Light lights[] = { {3, false, 99999}, {3, true, 10999}, {2, true, 10999}, {1, false, 30999}, {1, true, 10999}};   </description>
    </item>
    
  </channel>
</rss>
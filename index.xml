<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mingjie Li</title>
    <link>https://limingjie.github.io/</link>
    <description>Recent content on Mingjie Li</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Feb 2023 00:00:00 +0800</lastBuildDate><atom:link href="https://limingjie.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Utilities</title>
      <link>https://limingjie.github.io/utils/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/utils/</guid>
      <description>RGB Colors</description>
    </item>
    
    <item>
      <title>CH552/CH554 Development Guide - macOS</title>
      <link>https://limingjie.github.io/posts/2022-09-27-ch552-development/</link>
      <pubDate>Wed, 28 Sep 2022 00:00:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2022-09-27-ch552-development/</guid>
      <description>CH552G/CH554G Pinout (Get original SVG image from GitHub)
# Pin Timer SPI PWM UART Timer Interrupt Touch USB ADC From Datasheet 1 P3.2 TXD1_ INT0 VBUS1 AIN3 P3.2/TXD1_/INT0/VBUS1/AIN3 2 P1.4 T2_/CAP1_ SCS TIN2 UCC1 AIN1 P1.4/T2_/CAP1_/SCS/TIN2/UCC1/AIN1 3 P1.5 MOSI PWM1 TIN3 UCC2 AIN2 P1.5/MOSI/PWM1/TIN3/UCC2/AIN2 4 P1.6 MISO RXD1 TIN4 P1.6/MISO/RXD1/TIN4 5 P1.7 SCK TXD1 TIN5 P1.7/SCK/TXD1/TIN5 6 RST T2EX_/CAP2_ RST/T2EX_/CAP2_ 7 P3.1 PWM2_ TXD P3.1/PWM2_/TXD 8 P3.0 PWM1_ RXD P3.0/PWM1_/RXD 9 P1.</description>
    </item>
    
    <item>
      <title>Convert Jupyter Notebook with CJK to PDF on MacOS</title>
      <link>https://limingjie.github.io/posts/2021-12-28-convert-jupyter-notebook-with-cjk-to-pdf-on-macos/</link>
      <pubDate>Tue, 28 Dec 2021 12:59:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2021-12-28-convert-jupyter-notebook-with-cjk-to-pdf-on-macos/</guid>
      <description>Install Dependencies Follow nbconvert Installation Guide to install dependencies.
1 2 3 pip install nbconvert pip install pandoc brew install mactex Install CJK Font Use system font or install any CJK font. I recommend Sarasa Gothic (更纱黑体 / 更紗黑體 / 更紗ゴシック / 사라사고딕).
1 brew install font-sarasa-gothic Convert the Notebook to PDF Convert the notebook to tex
1 jupyter nbconvert --to latex notebook-to-convert.ipynb Modify the tex file to add CJK package and set CJK font</description>
    </item>
    
    <item>
      <title>Logic Gate Learning Kit</title>
      <link>https://limingjie.github.io/posts/2021-03-02-logic-gate-learning-kit/</link>
      <pubDate>Tue, 02 Mar 2021 23:00:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2021-03-02-logic-gate-learning-kit/</guid>
      <description>Build for my 5-year-old son to learn logic gates.
Logic Gate Learning Kit PCB Logic Gate Learning Kit Cheat Sheet PCB BOM ID Name Comment Footprint Quantity 1 BATTERY 2xAA Battery BATTERY-HOLDER-2AA 1 2 HDR-F-2.54_1x2 Output Pin Sockets HDR-F-2.54_1X2 12 3 HDR-F-2.54_2x2 A/B/C Pin Sockets HDR-F-2.54_2X2 3 4 HDR-F-2.54_2x8 Fixed Pin Sockets HDR-F-2.54_2X8 2 5 HDR-M-2.54_1x1 Input Pin Headers HDR-M-2.54_1X1 25 6 LED LED LED_1206 40 7 R100k Pull Down Resistor R_0805 22 8 R1K Resistor for LED R_0805 40 9 SN74LVC1G00DBVR NAND Gate SOT-23-5 2 10 SN74LVC1G02DBVR NOR Gate SOT-23-5 2 11 SN74LVC1G04DBVR NOT Gate SOT-23-5 2 12 SN74LVC1G08DBVR AND Gate SOT-23-5 2 13 SN74LVC1G32DBVR OR Gate SOT-23-5 2 14 SN74LVC1G86DBVR XOR Gate SOT-23-5 2 15 SS12D00G3 Switch SLIDE_MINI_SWITCH 4 Clone The Project Logic Gate Learning Kit on GitHub Logic Gate Learning Kit on EasyEDA License This work is licensed under a Creative Commons Attribution-NonCommercial 4.</description>
    </item>
    
    <item>
      <title>Multiply Big Numbers</title>
      <link>https://limingjie.github.io/posts/2020-02-24-multiply-big-numbers/</link>
      <pubDate>Mon, 24 Feb 2020 23:00:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2020-02-24-multiply-big-numbers/</guid>
      <description>Multiply Strings I answered this LeetCode question many years ago and got a successful submission with a not too bad score.
Some code like this, I tried to make it easy to understand, well it might sacrifice some performance. The code takes less than 1s to calculate 10,000! on a MBP 2017 and nearly 100s to calculate 100,000!. Bravo!
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 #include &amp;lt;algorithm&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;iterator&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;vector&amp;gt; std::string multiply(std::string a, std::string b) { size_t size_a = a.</description>
    </item>
    
    <item>
      <title>Test of Randomness - Knuth Shuffle</title>
      <link>https://limingjie.github.io/posts/2019-07-18-knuth-shuffle/</link>
      <pubDate>Thu, 18 Jul 2019 20:05:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2019-07-18-knuth-shuffle/</guid>
      <description>Test of Randomness using a fixed seed. A fixed seed will generate fixed sequence of random numbers.
shuffle.go
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 package shuffle import ( &amp;#34;math/rand&amp;#34; ) // Shuffle - Knuth Shuffle // https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle // &amp;gt; -- To shuffle an array a of n elements (indices 0.</description>
    </item>
    
    <item>
      <title>Typeset Pinyin in TeX</title>
      <link>https://limingjie.github.io/posts/2019-05-29-katex-pinyin/</link>
      <pubDate>Wed, 29 May 2019 23:50:59 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2019-05-29-katex-pinyin/</guid>
      <description>Use \atop $$ \def\py#1#2{\text{\scriptsize{#2}}\atop\text{\;#1\;}} {\py{关}{gu\=an}} {\py{雎}{j\=u}} \\~\\ {\py{关}{gu\=an}} {\py{关}{gu\=an}} {\py{雎}{j\=u}} {\py{鸠}{ji\=u}} {\py{，}{}} {\py{在}{z\`ai}} {\py{河}{h\&#39;e}} {\py{之}{zh\=\i}} {\py{洲}{zh\=ou}} {\py{。}{}} \\~\\ {\py{窈}{y\v{a}o}} {\py{窕}{ti\v{a}o}} {\py{淑}{sh\=u}} {\py{女}{n\v{\&#34;u}}} {\py{，}{}} {\py{君}{j\=un}} {\py{子}{z\v\i}} {\py{好}{h\v{a}o}} {\py{逑}{qi\&#39;u}} {\py{。}{}} $$ 1 2 3 4 5 6 7 8 9 10 \def\py#1#2{\text{\scriptsize{#2}}\atop\text{\;#1\;}} {\py{关}{gu\=an}} {\py{雎}{j\=u}} \\~\\ {\py{关}{gu\=an}} {\py{关}{gu\=an}} {\py{雎}{j\=u}} {\py{鸠}{ji\=u}} {\py{，}{}} {\py{在}{z\`ai}} {\py{河}{h\&amp;#39;e}} {\py{之}{zh\=\i}} {\py{洲}{zh\=ou}} {\py{。}{}} \\~\\ {\py{窈}{y\v{a}o}} {\py{窕}{ti\v{a}o}} {\py{淑}{sh\=u}} {\py{女}{n\v{\&amp;#34;u}}} {\py{，}{}} {\py{君}{j\=un}} {\py{子}{z\v\i}} {\py{好}{h\v{a}o}} {\py{逑}{qi\&amp;#39;u}} {\py{。}{}} Use \overset $$ \def\py#1#2{\overset{\text{#2}}{\text{\;#1\;}}} {\py{关}{gu\=an}} {\py{雎}{j\=u}} \\ {\py{关}{gu\=an}} {\py{关}{gu\=an}} {\py{雎}{j\=u}} {\py{鸠}{ji\=u}} ， {\py{在}{z\`ai}} {\py{河}{h\&#39;e}} {\py{之}{zh\=\i}} {\py{洲}{zh\=ou}} 。 \\ {\py{窈}{y\v{a}o}} {\py{窕}{ti\v{a}o}} {\py{淑}{sh\=u}} {\py{女}{n\v{\&#34;</description>
    </item>
    
    <item>
      <title>Render TeX in Hugo Blog</title>
      <link>https://limingjie.github.io/posts/2019-05-28-render-tex-in-hugo/</link>
      <pubDate>Wed, 29 May 2019 00:30:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2019-05-28-render-tex-in-hugo/</guid>
      <description>Recently, I started to think about learning $\TeX$, adding $\TeX$ support to blog looks like a good start for me. It took me quite some time to figure out all the culprits of embedding $\TeX$ in markdown. I hope this blog could save you some time before starting writing in $\TeX$.
Note: Some contents in this post is outdated. Hugo markdown engine moved from Blackfriday to Goldmark.
Required Components The default Blackfriday markdown engine.</description>
    </item>
    
    <item>
      <title>Algorithm: Array Summary Threshold</title>
      <link>https://limingjie.github.io/posts/2019-05-27-algorithm-summary-threshold/</link>
      <pubDate>Sun, 26 May 2019 22:00:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2019-05-27-algorithm-summary-threshold/</guid>
      <description>Question Given an array of integers $A (a_i \geq 0, i \in [0, n])$ and a threshold $T$.
If $\sum_{i = 0}^n a_i &amp;gt; T$, find an integer $t$, for $a_i &amp;gt; t (i \in [0, n]) \to a_i = t$.
Find the largest $t$ which makes $\sum_{i = 0}^n a_i \leq T$.
For Example, $A = [30, 20, 10, 50, 40],,,T = 127$. Expecting $t = 33$.
Answer ArraySummaryThreshold.go</description>
    </item>
    
    <item>
      <title>Golang Closure Exercise</title>
      <link>https://limingjie.github.io/posts/2019-05-25-golang-closure-exercise/</link>
      <pubDate>Sat, 25 May 2019 15:00:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2019-05-25-golang-closure-exercise/</guid>
      <description>I always had a question, if Golang does not have the static variable, how could it gracefully handle long lifetime variables except using global variables?
Until last night, I saw this Exercise: Fibonacci closure in A tour of Go. I have to admit I am not a fan of closure, sometimes it makes easy logic complex. But it is still great for learning.
Exercise: Fibonacci closure
Let&amp;rsquo;s have some fun with functions.</description>
    </item>
    
    <item>
      <title>My Mechanical Keyboards</title>
      <link>https://limingjie.github.io/posts/2019-05-01-my-mechanical-keyboards/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2019-05-01-my-mechanical-keyboards/</guid>
      <description>My very first impression of a mechanical keyboard is a clunky ISO layout IBM keyboard on which I learned touch typing, I can still remember it was full of noise like rusty sprints. Then suddenly, the whole world is dominated by membrane keyboards for its low cost and quiet experience.
As a fan of keyboards and mice. I owned Logitech mice M505, M525, and M545, guess what? I only paid the first one, they kept broken within the warranty and got replaced.</description>
    </item>
    
    <item>
      <title>M5Stack Traffic Light</title>
      <link>https://limingjie.github.io/posts/2019-04-10-m5stack-traffic-light/</link>
      <pubDate>Wed, 10 Apr 2019 22:10:00 +0800</pubDate>
      
      <guid>https://limingjie.github.io/posts/2019-04-10-m5stack-traffic-light/</guid>
      <description>A traffic light toy build on M5Stack. Find the source code on GitHub.
Customize The Traffic Light Find the traffic light sequence definition in TrafficLight.ino. Customize the sequence in lights array.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Traffic light struct typedef struct { int color_index; // 1 - Red, 2 - Yellow, 3 - Green bool blink; unsigned long interval; // milliseconds } Traffic_Light; // Traffic light sequences Traffic_Light lights[] = { {3, false, 99999}, {3, true, 10999}, {2, true, 10999}, {1, false, 30999}, {1, true, 10999}}; </description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://limingjie.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://limingjie.github.io/about/</guid>
      <description>Experience Everbridge Senior Software Engineering Manager Apr 2022 – Present · Beijing, China Software Engineering Manager Aug 2017 – Apr 2022 · 4 yrs 9 mos · Beijing, China Oracle Software Development Manager Dec 2015 – Aug 2017 · 1 yr 9 mos · Beijing, China Principal Software Engineer Dec 2014 – Dec 2015 · 1 yr 1 mo · Beijing, China Senior Software Engineer Sep 2012 – Nov 2014 · 2 yrs 3 mos · Beijing, China Software Engineer Mar 2011 – Aug 2012 · 1 yr 6 mos · Beijing, China IBM IT Specialist Mar 2006 – Mar 2011 · 5 yrs 1 mo · Dalian, China Certifications PMI Agile Certified Practitioner (PMI-ACP)® · Project Management Institute Issued Dec 2018 · Expires Dec 2024 PMI Issued ACP Badge Project Management Professional (PMP)® · Project Management Institute Issued Mar 2018 · Expires Mar 2024 PMI Issued PMP Badge Patent US10152590B2 - Implementing a WebSocket server to circumvent access controls, by a web browser, on a web application Issued Dec 11, 2018 Google Patents - US10152590B2 </description>
    </item>
    
  </channel>
</rss>
